import re
import csv

train = open(r'trainLabels.csv')
test = open(r'sampleSubmission.csv')

features = ['dd', 'dw', 'db', 'align', 'push', 'mov', 'add', 'xor', 'cmp',
            'jnz', 'or', 'jz', 'lea', 'test', 'pop', 'leave', 'retn', 'endp',
            'call', 'inc', 'movzx', 'setnle', 'jmp']

features2 = [i + ',' + j for i in features for j in features]
features3 = features + features2

def readFile(filename):
    openfile = open(filename)
    rows = []
    for row in openfile:
        row = row.strip().split()
        for i in row:
            if i in features:
                rows.append(i)

    featsDict = {}

    for t, i in enumerate(rows):
        featsDict.setdefault(i, 0)
        featsDict[i] += 1
        if t < len(rows) -1:
            j = rows[t + 1]
            k = i + ',' + j
            featsDict.setdefault(k, 0)
            featsDict[k] += 1
                

    for feat in features3:
        featsDict.setdefault(feat, 0)

    return featsDict

rows = []
for row in train:
    rows.append(row)
rows = rows[1:]

f = open(r'submissions\asm_train2.csv', 'wb')
open_file_object = csv.writer(f)
header = ['Id', 'Class']
header.extend(features3)
open_file_object.writerow(header)

for t, i in enumerate(rows):
    Id, Class = i.strip().split(',')
    Id = re.compile('(\w+)').findall(Id)[0]
    filename = 'train\\' + Id + '.asm'
    featsDict = readFile(filename)
    content = []
    content.append(Id)
    content.append(Class)
    content.extend([featsDict[feat] for feat in features3])
    open_file_object.writerow(content)
    print t


f.close()

rows = []
for row in test:
    rows.append(row)
rows = rows[1:]

f = open(r'submissions\asm_test2.csv', 'wb')
open_file_object = csv.writer(f)
header = ['Id']
header.extend(features3)
open_file_object.writerow(header)

for t, i in enumerate(rows):
    Id = i.strip().split(',')[0]
    Id = re.compile('(\w+)').findall(Id)[0]
    filename = 'test\\' + Id + '.asm'
    featsDict = readFile(filename)
    content = []
    content.append(Id)
    content.extend([featsDict[feat] for feat in features3])
    open_file_object.writerow(content)
    print t

f.close()
